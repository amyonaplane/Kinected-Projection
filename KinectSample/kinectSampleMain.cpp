#include "Kinect.h"
#include <opencv2/opencv.hpp>
#include <opencv2/core/core.hpp>
#include <opencv2/calib3d/calib3d.hpp>
#include <opencv2/highgui/highgui.hpp>
#include <stdio.h>
#include "Eigen/Eigen/Eigen"
#include "Eigen/Eigen/StdVector"
#include "Eigen/Eigen/SVD"
#include "Eigen/Eigen/Jacobi"

#include <iostream>
#include <fstream>

using namespace cv;
using namespace std;
using namespace Eigen;

int main (int argc, char *argv[]) {

	char pattern[100];
	sprintf_s(pattern, 100, "%s%%03d.ply", argv[1]);
	int modelNum = atoi(argv[2]);

	Mat video(cv::Size(200,200), CV_8UC3);
	video.setTo(cv::Scalar(128,128,128));

	Mat depth(cv::Size(200,200), CV_8UC1);
	depth.setTo(cv::Scalar(128,128,128));

	Mat lightImage, darkImage, greyHomographyImage, projector2KinectHomography, kinect2RealHomography, grey, kinectDistortCoeff, projectorDistortCoeff, objectKinectMat, objectProjectorMat,
		stereoR, stereoT, stereoE, stereoF, R1, R2, P1, P2, Q, rodriguesMat;
	vector<Mat> kinectRvect, kinectTvect, projectorRvect, projectorTvect;
	vector<Point2f> kinect2ProjectorCorners, projectorCorners, representationCorners, realCorners;

	Size projectorBoard_sz=Size(8,6);
	Size realBoard_sz=Size(12,7);
	int calibrationSize=3;

	Mat chessBoardImage=imread("127chessboard.jpg");
	cvtColor(chessBoardImage,chessBoardImage, CV_RGB2GRAY);
	bool imageCornersFound = findChessboardCorners(chessBoardImage,realBoard_sz,representationCorners,CALIB_CB_ADAPTIVE_THRESH+CALIB_CB_NORMALIZE_IMAGE);
	if(imageCornersFound){
		cornerSubPix(chessBoardImage, representationCorners, Size(11,11), Size(-1,-1),TermCriteria(CV_TERMCRIT_EPS+CV_TERMCRIT_EPS,30,0.1));
	}

	//create object points of real-world chessboard representation to be used in calibration
	vector<vector<Point3f>>objectPoints;
	vector<Point3f>vecPoints;

//change Point2f into Point3f
		for(int y=0;y<560;y+=80){
			for(int x=0;x<960;x+=80){
				Point3f point2fToPoint3f(x,y,0);
				vecPoints.push_back(point2fToPoint3f);
			}
		}
	for(int j=0;j<calibrationSize;j++){
		objectPoints.push_back(vecPoints);
	}

	//create vector of vectors for image points found from Kinect
	vector<vector<Point2f>>kinectPoints;
	//create vector of vectors for image points found from projector
	vector<vector<Point2f>>projectorPoints;

	
/*	realCorners.push_back(Point2f(323.11002, 411.18857));
	realCorners.push_back(Point2f(296.8067, 401.53592));
	realCorners.push_back(Point2f(270.31967, 391.81686));
	realCorners.push_back(Point2f(242.97159, 382.03555));
	realCorners.push_back(Point2f( 215.32108, 372.20035));
	realCorners.push_back(Point2f(187.18428, 362.013));
 realCorners.push_back(Point2f(158.7301, 351.69318));
 realCorners.push_back(Point2f(129.67854, 341.07123));
realCorners.push_back(Point2f( 100.4308, 330.42206));
realCorners.push_back(Point2f( 70.757301, 319.48813));
realCorners.push_back(Point2f( 40.772514, 308.08691));
realCorners.push_back(Point2f( 10.282936, 296.51611));
realCorners.push_back(Point2f( 330.25699, 383.61664));
realCorners.push_back(Point2f( 304.76093, 374.24649));
realCorners.push_back(Point2f( 278.9845, 364.46127));
realCorners.push_back(Point2f( 252.79445, 354.66531));
realCorners.push_back(Point2f( 225.82332, 344.8717));
realCorners.push_back(Point2f( 198.69487, 334.87997));
realCorners.push_back(Point2f( 170.99931, 324.68228));
realCorners.push_back(Point2f( 142.88896, 314.1716));
realCorners.push_back(Point2f( 114.48753, 303.66739));
realCorners.push_back(Point2f( 85.664627, 292.94214));
realCorners.push_back(Point2f( 56.583969, 281.74268));
realCorners.push_back(Point2f( 27.107685, 270.26202));
realCorners.push_back(Point2f( 337.10059, 357.81436));
realCorners.push_back(Point2f( 312.34027, 348.37759));
realCorners.push_back(Point2f( 287.39053, 338.71622));
 realCorners.push_back(Point2f(261.83752, 328.86295));
 realCorners.push_back(Point2f(235.92049, 319.17917));
realCorners.push_back(Point2f( 209.48335, 309.33951));
realCorners.push_back(Point2f( 182.71463, 299.12515));
realCorners.push_back(Point2f( 155.42661, 288.88193));
 realCorners.push_back(Point2f(127.77686, 278.50409));
realCorners.push_back(Point2f( 99.790619, 267.87964));
realCorners.push_back(Point2f( 71.601692, 256.84219));
realCorners.push_back(Point2f( 43.038521, 245.46999));
realCorners.push_back(Point2f( 343.48059, 333.23083));
realCorners.push_back(Point2f( 319.45993, 323.88068));
realCorners.push_back(Point2f( 295.08969, 314.34061));
realCorners.push_back(Point2f( 270.51437, 304.62708));
realCorners.push_back(Point2f( 245.29463, 294.95697));
realCorners.push_back(Point2f( 219.67807, 285.18967));
realCorners.push_back(Point2f( 193.68886, 275.21512));
realCorners.push_back(Point2f( 167.35782, 264.90369));
realCorners.push_back(Point2f( 140.47026, 254.71733));
realCorners.push_back(Point2f( 113.2719, 244.25467));
realCorners.push_back(Point2f( 85.795227, 233.44403));
realCorners.push_back(Point2f( 58.214897, 222.14807));
realCorners.push_back(Point2f( 349.67441, 309.82816));
realCorners.push_back(Point2f( 326.31131, 300.59186));
realCorners.push_back(Point2f( 302.50629, 291.29141));
 realCorners.push_back(Point2f(278.55539, 281.79144));
 realCorners.push_back(Point2f(254.21584, 272.11685));
 realCorners.push_back(Point2f(229.35342, 262.43008));
realCorners.push_back(Point2f( 204.14522, 252.49065));
realCorners.push_back(Point2f( 178.49025, 242.46468));
realCorners.push_back(Point2f( 152.539, 232.02817));
realCorners.push_back(Point2f( 126.08568, 221.8293));
realCorners.push_back(Point2f( 99.415726, 211.40353));
 realCorners.push_back(Point2f(72.555031, 200.22995));
realCorners.push_back(Point2f( 355.46313, 287.68289));
realCorners.push_back(Point2f( 332.7767, 278.50775));
 realCorners.push_back(Point2f(309.59436, 269.31573));
 realCorners.push_back(Point2f(286.2742, 260.09973));
realCorners.push_back(Point2f( 262.48209, 250.52209));
realCorners.push_back(Point2f( 238.43199, 240.80983));
realCorners.push_back(Point2f( 213.82407, 231.1084));
realCorners.push_back(Point2f( 189.08876, 221.08682));
 realCorners.push_back(Point2f(163.76114, 210.82651));
realCorners.push_back(Point2f( 138.28214, 200.54613));
 realCorners.push_back(Point2f(112.33176, 190.44371));
 realCorners.push_back(Point2f(86.251419, 179.55165));
realCorners.push_back(Point2f( 360.73764, 266.91052));
realCorners.push_back(Point2f( 338.68271, 257.78952));
 realCorners.push_back(Point2f(316.49088, 248.50294));
 realCorners.push_back(Point2f(293.4397, 239.33629));
 realCorners.push_back(Point2f(270.44666, 230.03192));
realCorners.push_back(Point2f( 246.96062, 220.47104));
realCorners.push_back(Point2f( 223.26616, 210.74237));
realCorners.push_back(Point2f(199.02409, 200.88954));
realCorners.push_back(Point2f( 174.57486, 190.81104));
realCorners.push_back(Point2f( 149.6093, 180.54935));
realCorners.push_back(Point2f(124.5482, 170.42093));
realCorners.push_back(Point2f(99.173492, 160.20041));
 kinectPoints.push_back(realCorners);
realCorners.clear();
 //clear realCorners?
realCorners.push_back(Point2f(272.5582, 437.62228));
realCorners.push_back(Point2f( 269.57776, 407.24988));
realCorners.push_back(Point2f( 266.58112, 377.26974));
realCorners.push_back(Point2f( 263.61411, 347.30142));
realCorners.push_back(Point2f( 260.49347, 317.84109));
realCorners.push_back(Point2f( 257.60645, 288.55261));
realCorners.push_back(Point2f( 254.42769, 259.59753));
realCorners.push_back(Point2f( 251.5484, 230.6833));
realCorners.push_back(Point2f( 248.35988, 202.3006));
realCorners.push_back(Point2f( 245.41553, 174.11559));
realCorners.push_back(Point2f( 242.50661, 145.85274));
 realCorners.push_back(Point2f(239.59094, 117.70502));
realCorners.push_back(Point2f( 300.30618, 431.30988));
realCorners.push_back(Point2f( 297.26511, 401.51764));
realCorners.push_back(Point2f( 294.23651, 372.13919));
realCorners.push_back(Point2f( 291.33841, 343.01984));
realCorners.push_back(Point2f( 288.05573, 314.13065));
realCorners.push_back(Point2f( 284.93497, 285.56635));
realCorners.push_back(Point2f( 281.81793, 257.14951));
realCorners.push_back(Point2f( 278.75089, 228.93965));
realCorners.push_back(Point2f( 275.67865, 201.16501));
realCorners.push_back(Point2f( 272.54395, 173.59633));
realCorners.push_back(Point2f( 269.70285, 145.97499));
realCorners.push_back(Point2f( 266.84943, 118.29693));
 realCorners.push_back(Point2f(326.66599, 425.20258));
realCorners.push_back(Point2f( 323.63239, 396.05106));
realCorners.push_back(Point2f( 320.47574, 367.32306));
realCorners.push_back(Point2f( 317.60156, 338.7417));
realCorners.push_back(Point2f( 314.3082, 310.64804));
realCorners.push_back(Point2f( 311.17191, 282.52551));
 realCorners.push_back(Point2f(308.04486, 254.78532));
realCorners.push_back(Point2f( 304.82242, 227.30913));
realCorners.push_back(Point2f( 301.75543, 199.94762));
realCorners.push_back(Point2f( 298.58966, 173.06511));
realCorners.push_back(Point2f( 295.78329, 146.00493));
realCorners.push_back(Point2f( 292.93536, 118.98286));
realCorners.push_back(Point2f( 352.25583, 419.3255));
realCorners.push_back(Point2f( 348.81125, 390.83691));
realCorners.push_back(Point2f( 345.81805, 362.70337));
realCorners.push_back(Point2f( 342.6084, 334.81586));
realCorners.push_back(Point2f( 339.47195, 307.24945));
realCorners.push_back(Point2f( 336.2475, 279.73926));
realCorners.push_back(Point2f( 332.96136, 252.54779));
realCorners.push_back(Point2f( 329.95297, 225.60844));
realCorners.push_back(Point2f( 326.61017, 198.9935));
 realCorners.push_back(Point2f(323.60846, 172.50679));
 realCorners.push_back(Point2f(320.56982, 146.10393));
realCorners.push_back(Point2f( 317.91907, 119.63136));
realCorners.push_back(Point2f( 376.52155, 413.78464));
 realCorners.push_back(Point2f(373.30325, 385.89337));
realCorners.push_back(Point2f( 369.84012, 358.32538));
 realCorners.push_back(Point2f(366.69028, 331.01642));
realCorners.push_back(Point2f( 363.60989, 303.93881));
realCorners.push_back(Point2f( 360.22989, 277.19217));
realCorners.push_back(Point2f( 356.93906, 250.4601));
realCorners.push_back(Point2f( 353.70065, 224.07524));
realCorners.push_back(Point2f( 350.65384, 197.84451));
realCorners.push_back(Point2f( 347.45554, 172.11734));
realCorners.push_back(Point2f( 344.30582, 146.35049));
realCorners.push_back(Point2f( 341.58661, 120.31957));
realCorners.push_back(Point2f( 399.87296, 408.40683));
realCorners.push_back(Point2f( 396.54514, 381.24878));
realCorners.push_back(Point2f( 393.21475, 354.1004));
realCorners.push_back(Point2f( 389.78546, 327.39771));
realCorners.push_back(Point2f( 386.50812, 300.9501));
realCorners.push_back(Point2f( 383.32376, 274.56903));
realCorners.push_back(Point2f( 379.85193, 248.45482));
realCorners.push_back(Point2f( 376.61539, 222.57021));
realCorners.push_back(Point2f( 373.63312, 196.94814));
realCorners.push_back(Point2f( 370.54291, 171.59367));
realCorners.push_back(Point2f( 367.22571, 146.411));
realCorners.push_back(Point2f( 364.29321, 121.11877));
realCorners.push_back(Point2f( 422.00125, 403.24408));
realCorners.push_back(Point2f( 418.71118, 376.49683));
realCorners.push_back(Point2f( 415.67184, 350.15338));
realCorners.push_back(Point2f( 412.09528, 323.9205));
realCorners.push_back(Point2f( 408.60007, 297.9787));
realCorners.push_back(Point2f( 405.28745, 272.16614));
realCorners.push_back(Point2f( 402.01205, 246.56676));
realCorners.push_back(Point2f( 398.68515, 221.23677));
realCorners.push_back(Point2f( 395.6358, 196.0723));
realCorners.push_back(Point2f( 392.5567, 171.16934));
realCorners.push_back(Point2f( 389.36063, 146.45956));
realCorners.push_back(Point2f(386.04654, 121.80523));
  kinectPoints.push_back(realCorners);
	realCorners.clear();*/

	Mat projectorImage=imread("checkerboard.png");
	cvtColor(projectorImage,grey, CV_RGB2GRAY);
	bool projectorCornersFound = findChessboardCorners(grey,projectorBoard_sz,projectorCorners,CALIB_CB_ADAPTIVE_THRESH+CALIB_CB_NORMALIZE_IMAGE);
	if(projectorCornersFound){
		cornerSubPix(grey, projectorCorners, Size(11,11), Size(-1,-1),TermCriteria(CV_TERMCRIT_EPS+CV_TERMCRIT_EPS,30,0.1));
	}

	ifstream outputFileKI("kinect2.txt");
	string line;
	float x,y;
	char comma;
	char semicolon;
	while(outputFileKI>>x>>comma >>y>>semicolon){
		//while (realCorners.size()<2){
			realCorners.push_back(Point2f(x,y));
		//}
	}
		kinectPoints.push_back(realCorners);
		cout<<kinectPoints[0];
	//}


	Size projectorSize(1024,768);
	Size mainScreenSize(1920,1080);
	namedWindow("Projector");
	imshow("Projector", projectorImage);

	// Get a Windows handle to the window we made
	HWND windowHandle = FindWindow(0, "Projector");
	if (!windowHandle) {
		cout << "Couldn't find window" << std::endl;
	} 
	else {
		// Make the window full screen with no border or title,e tc.
		SetWindowLongPtr(windowHandle, GWL_STYLE, WS_SYSMENU | WS_POPUP | WS_CLIPCHILDREN | WS_CLIPSIBLINGS | WS_VISIBLE);

		//Shift the window so it is just to the right of the main screen
		MoveWindow(windowHandle, mainScreenSize.width, 0, projectorSize.width, projectorSize.height, TRUE);
	}

	try {
		Kinect& kinect = Kinect::get(0);
		kinect.openVideoStream(Kinect::RESOLUTION_640x480);
		kinect.openDepthStream(Kinect::RESOLUTION_640x480);
		kinect.setDepthMode(Kinect::DEPTH_MODE_NEAR);
	
		double angle = 5;
		kinect.setAngle(5);
		
		bool done = false;
		bool light = false;
		bool k2PHomographyFound = false;
		bool realCornersFound = false;
		bool stereoCalibrated = false;

		while (!done) {

			bool haveVideo = kinect.grabVideoFrame();
			bool haveDepth = kinect.grabDepthFrame();

			if (haveVideo) {
				kinect.fetchVideoImage(&video);
				flip(video,video,1);
			}

			if (haveDepth) {
				kinect.fetchDepthImage(&depth);
				flip(depth,depth,1);
			}

			if (haveVideo && haveDepth) {
				int keyPressed = waitKey(1);
				Matrix3f p2KHomography, k2RHomography;
				cvtColor(video,video,CV_RGB2GRAY);
				imshow("greyvid",video);

				if (keyPressed == 'q' || keyPressed == 'Q') {
					done = true;
				} 

				//calibrate the Kinect, make sure the chessboard is close to the Kinect to ensure smallest error value
				else if(keyPressed=='z'&&kinectPoints.size()<calibrationSize){
					bool realCornersFound=findChessboardCorners(video, realBoard_sz, realCorners, CALIB_CB_ADAPTIVE_THRESH+CALIB_CB_NORMALIZE_IMAGE);
					if(realCornersFound){
						cornerSubPix(video, realCorners, Size(11,11), Size(-1,-1),TermCriteria(CV_TERMCRIT_EPS+CV_TERMCRIT_EPS,30,0.1));
						kinectPoints.push_back(realCorners);
						ofstream outputFileKO;
						outputFileKO.open("kinect2.txt");

						cout<<"K"<<kinectPoints.size()<<" ";
						if(kinectPoints.size()==calibrationSize){
							double kinectCalibrate=calibrateCamera(objectPoints, kinectPoints, Size(640,480), objectKinectMat, kinectDistortCoeff, kinectRvect, kinectTvect);
							cout<<objectKinectMat;
							cout<<kinectCalibrate;
							for(int i=0;i<kinectPoints.size();i++){
								outputFileKO<<kinectPoints[i]<<endl;
							}
						}
					}
				}

				//find projector corners, use cloth over the chessboard
				else if(keyPressed=='f'&&light==false&&k2PHomographyFound==false){
					kinect.fetchVideoImage(&lightImage);
					cvtColor(lightImage, lightImage, CV_RGB2GRAY);
					flip(lightImage,lightImage,1);
					projectorImage=NULL;
					imshow("Projector", projectorImage);
					light=true;
				}

				else if(keyPressed=='y'&&light&&k2PHomographyFound==false){
					kinect.fetchVideoImage(&darkImage);
					flip(darkImage,darkImage,1);
					cvtColor(darkImage, darkImage, CV_RGB2GRAY);
					absdiff(lightImage,darkImage,greyHomographyImage);
					bool kinectFound = findChessboardCorners(greyHomographyImage,projectorBoard_sz,kinect2ProjectorCorners,CALIB_CB_ADAPTIVE_THRESH+CALIB_CB_NORMALIZE_IMAGE);
					if(kinectFound){
						cout<<"-k2P found-"<<endl;
						cornerSubPix(greyHomographyImage, kinect2ProjectorCorners, Size(11,11), Size(-1,-1),TermCriteria(CV_TERMCRIT_EPS+CV_TERMCRIT_EPS,30,0.1));
						projector2KinectHomography=findHomography(kinect2ProjectorCorners, projectorCorners, RANSAC);
						//convert to Eigen
						for(int i=0;i<projector2KinectHomography.rows;i++){
							for(int j=0;j<projector2KinectHomography.cols;j++){
								p2KHomography(i,j)=projector2KinectHomography.at<double>(i,j);//convert to eigen
							}
						}
						k2PHomographyFound=true;
						
					}
					else{
						light=false;
						projectorImage=imread("checkerboard.png");
						imshow("Projector", projectorImage);
					}
				}

				//remove cloth and cover the lens
				else if(keyPressed=='j'&&light&&k2PHomographyFound&&projectorPoints.size()<20){
					realCornersFound=findChessboardCorners(video, realBoard_sz, realCorners, CALIB_CB_ADAPTIVE_THRESH+CALIB_CB_NORMALIZE_IMAGE);		
					if(realCornersFound){
						vector<Point2f>u;
						u.clear();
						cout<<"-k2R found-"<<endl;
						cornerSubPix(video, realCorners, Size(11,11), Size(-1,-1),TermCriteria(CV_TERMCRIT_EPS+CV_TERMCRIT_EPS,30,0.1));
						kinect2RealHomography=findHomography(realCorners, representationCorners, RANSAC);//find homography
						//convert to Eigen
						for(int i=0;i<kinect2RealHomography.rows;i++){
							for(int j=0;j<kinect2RealHomography.cols;j++){
								k2RHomography(i,j)=kinect2RealHomography.at<double>(i,j);//save as eigen matrix
							}
						}
						Mat greyVideo;
						Matrix3f p2RHomography(p2KHomography*k2RHomography.inverse());
						Mat p2R=projector2KinectHomography*kinect2RealHomography.inv();
						
						for(Point2f point:representationCorners){//for each corner found from Kinect in k2Real-World chessboard						
							Vector3f point2Vector(point.x,point.y,1);//convert point into vector
							Vector3f vectorHomography(p2RHomography*point2Vector);//multiply vector by homograpy inverse
							vectorHomography/=vectorHomography(2);//divide by p(2) - generalize
							//cout<<vectorHomography(0)<<" ";
							//cout<<vectorHomography(1)<<endl;
							circle(projectorImage,Point2f(vectorHomography(0),vectorHomography(1)),3,Scalar(0,255,0),3);//print circle on found points
							u.push_back(Point2f(vectorHomography(0),vectorHomography(1)));
						}
						projectorPoints.push_back(u);
						cout<<"P"<<projectorPoints.size();
						if(projectorPoints.size()==calibrationSize){
							double projectCalibrate=calibrateCamera(objectPoints, projectorPoints, projectorSize, objectProjectorMat, projectorDistortCoeff, projectorRvect, projectorTvect);
							cout<<objectProjectorMat;
							cout<<projectCalibrate;
						}
						imshow("Projector", projectorImage);
					}
					else{
						k2PHomographyFound=false;
						light=false;
						projectorImage=imread("checkerboard.png");
						imshow("Projector", projectorImage);	
					}
				}
				else if(keyPressed=='k'&&realCornersFound){
					k2PHomographyFound=false;
					realCornersFound=false;
						light=false;
						projectorImage=imread("checkerboard.png");
						imshow("Projector", projectorImage);	
				}
				else if(keyPressed=='c'&&kinectPoints.size()==calibrationSize&&projectorPoints.size()==calibrationSize){
					double errorValue=stereoCalibrate(objectPoints, kinectPoints, projectorPoints, objectKinectMat, kinectDistortCoeff, objectProjectorMat, projectorDistortCoeff, Size(640,480), stereoR, stereoT, stereoE, stereoF);
					cout<<"stereoCalibration rms value: "<<errorValue<<endl; //kinect error 0.2 project error 0.16 why is stereo error 23?
					stereoRectify(objectKinectMat, kinectDistortCoeff, objectProjectorMat, projectorDistortCoeff,Size(640,480), stereoR, stereoT, R1, R2, P1, P2, Q);
					//stereoR small, stereoT kinda small
					cout<<"R: "<<stereoR<<endl;
					cout<<"T: "<<stereoT<<endl;
					stereoCalibrated=true;
				}
				else if(keyPressed=='u'&&stereoCalibrated){
					Mat greyv, greyd, circleProjection; 
					GaussianBlur(depth,greyd, Size(3,3),3,3);
					imshow("Depth", depth);
					vector<Vec3f> dcircles;
					Point2d centerd;
					int radiusd=0;
					HoughCircles(greyd, dcircles, HOUGH_GRADIENT, 1, greyd.rows/8, 20, 15, 30, 45); 
					for(int i=0;i<dcircles.size();i++){
						centerd=Point2d(cvRound(dcircles[0][0]), cvRound(dcircles[0][1]));
						radiusd=cvRound(dcircles[0][2]);
						circle(greyd, centerd, 3, Scalar(0,255,0),-1,8,0);
						circle(greyd, centerd, radiusd, Scalar(0,0,255),3,8,0);
					}
					projectorImage=NULL;
					Rodrigues(stereoR,rodriguesMat);
					rodriguesMat/=stereoT;
					circle(projectorImage,centerd,radiusd, Scalar(0,0,255),-1,8,0);
					imshow("keypoints", greyd);
					imshow("Projector",projectorImage);
				}
			}
		}
	} 
	catch (kinect_exception) {
		std::cerr << "Caught an exception" << std::endl;
	}

/*[458.29642, 396.34711;
 430.21719, 381.32498;
 402.40414, 366.47202;
 374.55661, 351.59344;
 347.0322, 337.14084;
 319.58624, 322.62463;
 292.49039, 308.31003;
 265.43649, 294.00363;
 238.64922, 279.88229;
 211.87149, 265.89966;
 185.28314, 251.69896;
 158.74442, 237.78317;
 470.10049, 367.73215;
 442.5065, 353.29083;
 415.15613, 338.68747;
 387.9216, 324.35367;
 360.71783, 310.07397;
 333.72198, 296.00482;
 306.93256, 282.04816;
 280.49576, 268.07098;
 254.02338, 254.43726;
 227.86523, 240.76501;
 201.75082, 227.13931;
 175.77505, 213.42813;
 481.42804, 340.46658;
 454.30362, 326.24347;
 427.38049, 312.1409;
 400.57748, 297.94553;
 373.79901, 284.24454;
 347.25113, 270.50821;
 321.00394, 256.78479;
 294.82025, 243.33316;
 269.01297, 229.99428;
 243.32068, 216.83313;
 217.71472, 203.5609;
 192.15446, 190.22144;
 492.41812, 314.03903;
 465.59189, 300.35974;
 439.04413, 286.43253;
 412.62418, 272.7175;
 386.3519, 259.23734;
 360.28421, 245.89941;
 334.45486, 232.72852;
 308.87201, 219.53879;
 283.43427, 206.6731;
 258.2374, 193.85277;
 233.03288, 180.99887;
 207.99265, 167.81572;
 502.96735, 288.6738;
 476.54089, 275.16324;
 450.23404, 261.78619;
 424.19363, 248.55128;
 398.46228, 235.32153;
 372.89227, 222.44615;
 347.48538, 209.5701;
 322.36038, 196.89824;
 297.37836, 184.16087;
 272.52194, 171.71948;
 247.75938, 159.31705;
 223.04504, 146.35583;
 512.90771, 264.07358;
 487.09045, 250.94214;
 461.17789, 237.94342;
 435.49658, 225.1813;
 410.17371, 212.47549;
 385.07059, 199.84648;
 360.07541, 187.3808;
 335.33197, 174.94591;
 310.69489, 162.5126;
 286.25433, 150.24515;
 261.79282, 138.27986;
 237.58229, 125.66879;
 522.38763, 240.72763;
 496.91614, 227.82095;
 471.86722, 215.04288;
 446.52457, 202.67183;
 421.50607, 190.46535;
 396.72791, 178.12939;
 372.24252, 165.92606;
 347.70078, 153.79742;
 323.49033, 141.65079;
 299.30923, 129.49648;
 275.37808, 117.65686;
 251.50552, 105.85534]
[406.16812, 435.70157;
 381.09778, 422.21112;
 356.3649, 408.60654;
 331.4494, 395.0484;
 306.79205, 381.54358;
 282.22678, 368.11594;
 257.74042, 354.72052;
 233.38492, 341.36044;
 209.23402, 328.24158;
 185.04254, 315.0856;
 160.94322, 301.79935;
 136.87694, 288.68359;
 416.75775, 409.35327;
 392.3299, 396.07947;
 367.85223, 382.66324;
 343.58881, 369.36548;
 319.26157, 356.17548;
 295.2522, 343.07278;
 271.2128, 329.95886;
 247.37454, 316.97891;
 223.52956, 304.19348;
 199.88528, 291.38687;
 176.27121, 278.57687;
 152.65291, 265.60178;
 427.09714, 383.92126;
 402.93906, 370.75238;
 379.01129, 357.69577;
 355.20404, 344.59293;
 331.42215, 331.79849;
 307.53015, 319.0177;
 284.21115, 306.30722;
 260.71423, 293.62387;
 237.43655, 281.1969;
 214.16341, 268.74652;
 190.98509, 256.16461;
 167.6945, 243.36984;
 436.88898, 359.27777;
 413.25089, 346.54077;
 389.62027, 333.63477;
 366.37146, 320.99335;
 342.85559, 308.4213;
 319.6243, 295.93414;
 296.55258, 283.64111;
 273.63742, 271.3158;
 250.66966, 259.1492;
 227.92279, 246.84315;
 205.084, 234.52725;
 182.34435, 221.84575;
 446.51102, 335.58282;
 423.22488, 323.0629;
 399.95297, 310.71283;
 376.97842, 298.34863;
 354.11942, 286.06668;
 331.23334, 274.01846;
 308.61548, 261.91833;
 285.97107, 249.87427;
 263.53842, 237.66176;
 241.06967, 225.76112;
 218.69267, 213.71115;
 196.31075, 201.33636;
 455.58865, 312.76999;
 432.76056, 300.58374;
 409.99469, 288.54785;
 387.25674, 276.61932;
 364.75797, 264.66003;
 342.45898, 252.75114;
 320.08615, 240.9451;
 297.87283, 228.97365;
 275.74454, 217.08902;
 253.73152, 205.24878;
 231.69659, 193.60393;
 209.74637, 181.60495;
 464.35455, 291.12289;
 441.81763, 279.16269;
 419.61807, 267.2724;
 397.24207, 255.57858;
 375.11682, 243.98552;
 353.04718, 232.28583;
 331.17426, 220.55789;
 309.31784, 208.90053;
 287.55182, 197.27284;
 265.88358, 185.55574;
 244.3421, 174.17369;
 222.72672, 162.76688]
[384.68704, 424.62494;
 359.40665, 416.74536;
 334.09158, 408.90244;
 308.32565, 401.00168;
 282.52631, 393.13574;
 256.58636, 385.18509;
 230.55435, 377.25336;
 204.22778, 369.20474;
 177.7571, 361.23077;
 151.20833, 353.21582;
 124.47134, 344.75568;
 97.577141, 336.444;
 390.09796, 397.95059;
 365.34348, 390.32205;
 340.50974, 382.42145;
 315.58707, 374.60245;
 290.2749, 366.82101;
 264.92258, 359.07086;
 239.33687, 351.27097;
 213.71265, 343.28122;
 187.88962, 335.45221;
 161.87491, 327.46396;
 135.63867, 319.33862;
 109.42258, 310.97089;
 395.23639, 372.53403;
 371.04416, 364.81509;
 346.73624, 357.21036;
 322.26218, 349.3844;
 297.655, 341.72092;
 272.85037, 334.09631;
 247.98055, 326.39133;
 222.8678, 318.54593;
 197.63516, 310.76178;
 172.2187, 302.97272;
 146.57234, 294.88779;
 120.78802, 286.62762;
 400.14172, 348.09109;
 376.49307, 340.61899;
 352.66534, 332.89044;
 328.82953, 325.37216;
 304.60568, 317.74081;
 280.51468, 310.22522;
 256.18365, 302.61389;
 231.6301, 294.80719;
 206.90352, 287.22885;
 182.14514, 279.43384;
 157.0556, 271.63815;
 131.82195, 263.42307;
 404.95972, 324.64807;
 381.69611, 317.17148;
 358.39658, 309.74057;
 334.94171, 302.33536;
 311.47177, 294.76062;
 287.7186, 287.35016;
 263.9838, 279.74066;
 239.96681, 272.33414;
 215.8577, 264.58395;
 191.5759, 257.12634;
 167.13158, 249.48137;
 142.43008, 241.39291;
 409.42282, 302.13257;
 386.80054, 294.79996;
 363.94077, 287.45093;
 340.90842, 280.21954;
 317.8584, 272.85806;
 294.70901, 265.47696;
 271.34912, 258.14777;
 247.94113, 250.67801;
 224.38286, 243.13406;
 200.59824, 235.53619;
 176.65131, 228.2491;
 152.55042, 220.41516;
 413.65848, 280.77405;
 391.41272, 273.47351;
 369.24438, 266.16531;
 346.5928, 259.0134;
 324.06506, 251.83824;
 301.33453, 244.60817;
 278.53632, 237.31212;
 255.50394, 230.03105;
 232.4884, 222.61398;
 209.15292, 215.21783;
 185.73967, 207.80048;
 162.2377, 200.45093]
[160.99651, 171.85283;
 191.57079, 182.72972;
 221.77214, 193.50793;
 252.02048, 204.24413;
 281.8479, 214.65688;
 311.47702, 225.17586;
 340.85815, 235.59595;
 370.09973, 246.14362;
 399.09988, 256.34619;
 427.89246, 266.56299;
 456.71951, 276.95099;
 485.44211, 287.38089;
 153.22037, 201.27005;
 183.34357, 211.6804;
 213.13876, 222.34273;
 242.69542, 232.69414;
 272.30487, 242.90759;
 301.38751, 253.04396;
 330.41772, 263.19528;
 359.09161, 273.36932;
 387.68079, 283.27448;
 416.08414, 293.26364;
 444.44003, 303.43008;
 472.70023, 313.73087;
 145.76355, 229.52489;
 175.39114, 239.84605;
 204.70415, 250.01376;
 233.81586, 260.28412;
 262.86237, 270.12787;
 291.61328, 279.90182;
 320.19571, 289.74451;
 348.53085, 299.5405;
 376.65775, 309.37369;
 404.61639, 319.1037;
 432.47092, 329.0416;
 460.32516, 339.26767;
 138.43941, 256.99655;
 167.69351, 266.85999;
 196.58926, 276.84042;
 225.34776, 286.72849;
 253.8607, 296.39798;
 282.34854, 305.90747;
 310.35141, 315.50851;
 338.2836, 325.21695;
 366.0567, 334.6817;
 393.47235, 344.26563;
 420.92551, 353.81754;
 448.34357, 363.84738;
 131.39316, 283.53683;
 160.17256, 293.25092;
 188.76785, 302.64301;
 217.12335, 312.26309;
 245.20227, 321.76746;
 273.12567, 331.12677;
 300.82486, 340.55191;
 328.33771, 349.85483;
 355.59097, 359.40436;
 382.69211, 368.45792;
 409.68396, 377.647;
 436.65079, 387.44131;
 124.65933, 309.2308;
 152.76044, 318.66855;
 181.15762, 328.02765;
 209.14476, 337.17081;
 236.83109, 346.38052;
 264.35422, 355.56006;
 291.5751, 364.68201;
 318.68045, 373.7868;
 345.57626, 383.09073;
 372.33362, 392.18381;
 398.86105, 400.80383;
 425.30164, 410.19455;
 118.47595, 333.66568;
 146.23909, 343.17395;
 173.61996, 352.58957;
 201.31871, 361.40988;
 228.66771, 370.26114;
 255.7227, 379.16797;
 282.64926, 388.13388;
 309.38605, 396.97192;
 335.85944, 405.84192;
 362.31216, 414.83304;
 388.4325, 423.36731;
 414.44156, 431.94678]
[578.57983, 340.91318;
 541.09583, 337.92709;
 504.61334, 334.89447;
 469.54169, 332.09924;
 435.77161, 329.45306;
 403.27634, 326.62158;
 372.16467, 324.06378;
 342.02844, 321.6156;
 313.2634, 319.37302;
 285.4856, 317.22754;
 258.43741, 314.67627;
 232.33742, 312.48141;
 577.68091, 308.0101;
 541.10571, 305.79382;
 505.64459, 303.43774;
 471.44882, 301.19492;
 438.27679, 299.30771;
 406.73679, 297.30457;
 376.39078, 295.38229;
 347.03534, 293.34698;
 318.84695, 291.71445;
 291.76614, 290.04749;
 265.37228, 288.23877;
 239.66295, 286.38409;
 576.49084, 277.13373;
 540.91522, 275.51871;
 506.41135, 273.71729;
 473.11505, 272.06619;
 440.98315, 270.61783;
 410.17938, 269.49976;
 380.50021, 267.95636;
 351.83932, 266.70016;
 324.41208, 265.62363;
 297.72467, 264.43219;
 271.88455, 263.19522;
 246.71227, 261.64816;
 575.59454, 247.80879;
 540.71155, 246.86378;
 507.27945, 245.66705;
 474.58914, 244.63495;
 443.46567, 243.79042;
 413.39893, 243.19974;
 384.45438, 242.31773;
 356.44342, 241.50313;
 329.46219, 240.7393;
 303.45209, 240.07619;
 278.1239, 239.38873;
 253.43878, 238.07669;
 574.36151, 220.07333;
 540.53204, 219.62273;
 507.8399, 219.40607;
 476.19849, 218.86902;
 445.78473, 218.36307;
 416.39114, 218.14299;
 388.05023, 217.79497;
 360.75067, 217.52788;
 334.34647, 217.07079;
 308.8551, 216.85139;
 284.25842, 216.60571;
 259.93463, 215.7625;
 573.2345, 193.78615;
 540.45483, 193.72482;
 508.46771, 193.90327;
 477.76309, 194.18835;
 447.92368, 194.25803;
 419.31165, 194.35216;
 391.44421, 194.49078;
 364.83862, 194.51068;
 338.94611, 194.44521;
 313.8891, 194.54443;
 289.85349, 194.9295;
 266.29132, 194.62842;
 572.01459, 169.40718;
 540.08099, 169.64935;
 509.19595, 169.75464;
 479.03607, 170.60466;
 450.01599, 171.36281;
 421.87875, 171.76334;
 394.89618, 172.24541;
 368.73849, 172.74878;
 343.35236, 173.27988;
 318.78455, 173.52095;
 295.24734, 173.96498;
 272.29651, 174.49483]
[395.94333, 432.6463;
 367.4397, 420.37204;
 338.87292, 407.9541;
 309.65891, 395.49646;
 280.57025, 383.1058;
 251.06549, 370.4491;
 221.35907, 357.83362;
 191.43309, 344.92575;
 161.25766, 332.16165;
 130.79662, 319.22021;
 100.42529, 305.67383;
 69.748093, 292.26373;
 402.92621, 402.9101;
 375.44849, 391.06253;
 347.72369, 378.75171;
 319.84933, 366.56131;
 291.45923, 354.44354;
 263.12683, 342.22089;
 234.4651, 329.86777;
 205.60233, 317.3468;
 176.45227, 304.98099;
 147.13457, 292.42374;
 117.56367, 279.4303;
 88.042992, 266.15402;
 409.42831, 375.25388;
 382.70404, 363.42926;
 356.05139, 351.54254;
 329.08383, 339.57184;
 301.76038, 327.72116;
 274.2937, 315.89386;
 246.68721, 303.79953;
 218.81017, 291.78253;
 190.72084, 279.65262;
 162.39232, 267.45102;
 133.88565, 254.76193;
 105.18058, 241.80467;
 415.47787, 349.11496;
 389.63245, 337.68594;
 363.76184, 325.97134;
 337.65619, 314.47662;
 311.27634, 302.96457;
 284.70731, 291.40512;
 258.10547, 279.68161;
 231.21718, 267.75922;
 204.00623, 256.07886;
 176.67302, 244.09637;
 149.07166, 231.86932;
 121.39569, 219.14122;
 421.35413, 324.57166;
 396.21542, 313.36844;
 371.02942, 302.33737;
 345.59982, 291.00778;
 320.33575, 279.64191;
 294.55756, 268.44632;
 268.73859, 257.01221;
 242.71799, 245.55548;
 216.5947, 233.73196;
 190.06068, 222.33438;
 163.37157, 210.56354;
 136.55151, 198.07738;
 426.58966, 301.50726;
 402.47284, 290.62161;
 377.88144, 279.724;
 353.30469, 268.97543;
 328.60678, 257.95926;
 303.78735, 246.85612;
 278.70874, 235.78073;
 253.55334, 224.55539;
 228.22171, 213.14774;
 202.64282, 201.63368;
 176.72314, 190.45404;
 150.81096, 178.48257;
 431.50095, 280.22214;
 408.00357, 269.44156;
 384.5415, 258.58002;
 360.5304, 248.13795;
 336.51901, 237.50233;
 312.38028, 226.67305;
 288.20105, 215.77103;
 263.65976, 204.83426;
 239.12721, 193.80005;
 214.32938, 182.52144;
 189.36659, 171.47644;
 164.21352, 160.3177]
[375.00354, 417.755;
 345.75089, 399.07977;
 316.77399, 380.43146;
 287.40811, 361.87561;
 258.24451, 343.50314;
 228.9543, 325.07986;
 199.80881, 306.6445;
 170.5956, 288.07764;
 141.43626, 269.79187;
 112.37881, 251.53262;
 83.437157, 232.65993;
 54.782902, 214.10844;
 388.22586, 388.06186;
 360.01212, 370.23941;
 331.88214, 352.11066;
 303.83099, 334.18298;
 275.50171, 316.4754;
 247.44907, 298.686;
 219.3082, 280.94742;
 191.23059, 263.15396;
 162.88739, 245.58098;
 134.7975, 227.8672;
 106.78801, 209.85858;
 79.030434, 191.66264;
 400.41571, 360.52185;
 373.18405, 343.19354;
 346.13934, 325.79749;
 318.9379, 308.39114;
 291.70435, 291.30707;
 264.55176, 274.32895;
 237.42595, 257.17804;
 210.24156, 240.15619;
 183.0477, 223.11151;
 155.76944, 206.09782;
 128.76074, 188.66006;
 101.78899, 170.98024;
 411.79135, 334.71149;
 385.37866, 318.10504;
 359.25845, 301.23874;
 333.03583, 284.52246;
 306.71201, 268.09607;
 280.47128, 251.62711;
 254.23318, 235.24716;
 228.05074, 218.60933;
 201.6653, 202.25571;
 175.43933, 185.70383;
 149.18562, 168.97032;
 123.15509, 151.78583;
 422.57944, 310.61942;
 397.05402, 294.46201;
 371.4194, 278.56512;
 346.00357, 262.54236;
 320.73795, 246.40289;
 295.28745, 230.54599;
 269.89026, 214.6084;
 244.55165, 198.65199;
 219.25772, 182.50005;
 193.69452, 166.70981;
 168.38002, 150.77429;
 143.0667, 134.16647;
 432.54834, 288.08401;
 407.90259, 272.56613;
 383.07751, 257.04459;
 358.37335, 241.67134;
 333.67932, 226.25682;
 309.22134, 210.74678;
 284.54016, 195.39151;
 260.1033, 179.91789;
 235.47493, 164.33426;
 210.9734, 148.76115;
 186.28639, 133.62801;
 161.80586, 117.72947;
 441.69858, 267.33661;
 417.6326, 252.14282;
 394.13376, 236.87041;
 369.89505, 222.10472;
 346.01547, 207.26971;
 322.13239, 192.31061;
 298.40311, 177.33096;
 274.54706, 162.38632;
 250.75087, 147.38547;
 226.89928, 132.19379;
 203.06987, 117.38364;
 179.31891, 102.54089]
[418.03403, 369.69125;
 390.37363, 368.52536;
 362.80548, 367.53333;
 334.78937, 366.50235;
 306.77393, 365.77405;
 278.38541, 364.70801;
 250.03136, 363.92517;
 221.23164, 362.82605;
 192.39264, 362.03214;
 163.19957, 361.26654;
 133.83968, 359.77231;
 104.48647, 358.42258;
 415.5152, 343.52231;
 388.66254, 342.41388;
 361.8476, 341.34027;
 334.83469, 340.14114;
 307.62561, 339.39026;
 280.08212, 338.29764;
 252.3918, 337.42682;
 224.54167, 336.20932;
 196.57372, 335.52106;
 168.3526, 334.46326;
 139.72377, 333.32886;
 111.10542, 331.71759;
 413.0708, 318.96155;
 387.06055, 317.73566;
 361.08279, 316.49402;
 334.6232, 315.40762;
 308.20367, 314.30469;
 281.71863, 313.51801;
 254.71771, 312.27765;
 227.74411, 311.46255;
 200.54779, 310.39102;
 173.09027, 309.51929;
 145.38338, 308.09323;
 117.5467, 306.54755;
 410.65442, 295.57687;
 385.59491, 294.53311;
 360.14883, 293.32654;
 334.53622, 292.05505;
 308.76028, 291.19128;
 282.96967, 290.09818;
 257.01285, 289.22092;
 230.69214, 287.87665;
 204.37152, 286.94479;
 177.5948, 285.84454;
 150.75296, 284.60126;
 123.70095, 283.04477;
 408.62567, 273.67169;
 384.01523, 272.35043;
 359.46512, 271.54538;
 334.4584, 270.24545;
 309.65579, 269.20825;
 284.26324, 268.14166;
 259.1037, 267.02695;
 233.5504, 265.83105;
 207.86084, 264.52518;
 182.04466, 263.61688;
 155.96915, 262.51755;
 129.54033, 260.98001;
 406.41144, 252.83818;
 382.64206, 251.68272;
 358.46329, 250.39734;
 334.38507, 249.59218;
 310.06482, 248.3622;
 285.74918, 247.39787;
 261.04016, 246.17476;
 236.22688, 245.01126;
 211.20595, 243.68419;
 186.15038, 242.44214;
 160.76532, 241.57831;
 135.286, 239.93764;
 404.59363, 233.5195;
 381.41498, 232.16298;
 357.97107, 230.75262;
 334.29636, 229.7834;
 310.54608, 228.77425;
 286.70959, 227.61142;
 262.82635, 226.3429;
 238.68846, 225.37691;
 214.48698, 223.97726;
 189.86285, 222.64653;
 165.34247, 221.63365;
 140.58447, 220.45175]
[345.99118, 287.20886;
 321.759, 281.32309;
 297.39651, 275.34375;
 272.38205, 269.26096;
 247.01801, 263.13651;
 221.23419, 256.8121;
 194.92357, 250.46965;
 168.11102, 244.01053;
 140.97244, 237.44113;
 113.40368, 230.72815;
 85.449493, 223.7437;
 57.241608, 216.81985;
 351.1431, 262.79681;
 327.32495, 256.82904;
 303.06839, 250.62236;
 278.44702, 244.38908;
 253.29034, 238.16464;
 227.77303, 231.74231;
 201.75328, 225.2791;
 175.41908, 218.49652;
 148.52324, 211.85739;
 121.37141, 205.03668;
 93.597046, 197.92165;
 65.718582, 190.7148;
 356.25351, 238.99403;
 332.56033, 232.76796;
 308.63727, 226.48605;
 284.2865, 220.0977;
 259.51083, 213.72504;
 234.22408, 207.20207;
 208.58429, 200.47549;
 182.49614, 193.70218;
 156.00304, 186.79735;
 128.95763, 179.86212;
 101.78466, 172.64362;
 74.203316, 165.32683;
 361.13531, 215.52295;
 337.7449, 209.32687;
 314.05548, 202.79939;
 290.03143, 196.36259;
 265.47125, 189.76546;
 240.53639, 183.11127;
 215.20328, 176.33594;
 189.47037, 169.38008;
 163.1955, 162.38759;
 136.64201, 155.23766;
 109.68859, 147.94818;
 82.560722, 140.41344;
 366.13522, 192.56464;
 342.96066, 186.11359;
 319.42856, 179.73245;
 295.5632, 173.10626;
 271.43628, 166.35793;
 246.69893, 159.55179;
 221.7178, 152.62245;
 196.23459, 145.55272;
 170.38681, 138.30258;
 144.1917, 131.17888;
 117.6723, 123.88835;
 90.76815, 116.23647;
 370.84732, 169.88313;
 348.06958, 163.41116;
 324.76746, 156.7852;
 301.13223, 150.24399;
 277.18774, 143.41756;
 252.78076, 136.43192;
 228.07513, 129.42145;
 202.93915, 122.18888;
 177.37518, 114.80199;
 151.53516, 107.47359;
 125.4187, 100.32584;
 99.047127, 92.65126;
 375.46466, 147.94843;
 352.83862, 141.27812;
 329.96844, 134.42067;
 306.54965, 127.71036;
 282.85046, 120.78167;
 258.75574, 113.75859;
 234.36055, 106.59325;
 209.47408, 99.367767;
 184.37581, 91.93013;
 158.78755, 84.416054;
 133.08878, 77.209579;
 107.11713, 69.832176]
[182.44684, 408.6452;
 170.77986, 384.04327;
 159.08856, 359.35037;
 147.16125, 334.2515;
 135.2867, 309.08066;
 123.23373, 283.6882;
 111.22575, 258.27368;
 99.159485, 232.5079;
 87.100266, 206.73109;
 75.001579, 180.78844;
 63.116226, 154.57475;
 51.087231, 128.30565;
 207.17107, 394.25385;
 195.83987, 370.25256;
 184.62206, 345.93671;
 173.26433, 321.48721;
 161.52879, 296.83841;
 149.95569, 272.16895;
 138.30156, 247.26755;
 126.61232, 222.18336;
 114.72561, 196.9778;
 103.01378, 171.65556;
 91.333038, 146.03317;
 79.716049, 120.32299;
 230.69662, 380.50693;
 219.83298, 356.87964;
 208.90082, 333.24088;
 197.87265, 309.27783;
 186.72903, 285.34366;
 175.45888, 261.14368;
 164.17044, 236.82092;
 152.73059, 212.35896;
 141.26721, 187.7101;
 129.7401, 162.96046;
 118.43342, 138.0495;
 107.13044, 112.71818;
 253.31355, 367.32935;
 242.65045, 344.35291;
 232.07539, 321.0618;
 221.4063, 297.70453;
 210.59448, 274.25842;
 199.65378, 250.69983;
 188.64104, 226.95598;
 177.69917, 203.00319;
 166.49654, 179.02057;
 155.41264, 154.80426;
 144.25343, 130.45589;
 133.31116, 105.7403;
 274.78754, 354.85367;
 264.59433, 332.25662;
 254.16359, 309.51108;
 243.71039, 286.77081;
 233.32408, 263.80316;
 222.66115, 240.76527;
 212.11151, 217.58867;
 201.34546, 194.24707;
 190.65903, 170.70575;
 179.76572, 147.15422;
 168.89076, 123.41978;
 158.26167, 99.167267;
 295.36145, 342.7619;
 285.40048, 320.71472;
 275.32431, 298.52032;
 265.09793, 276.27063;
 254.93039, 253.85757;
 244.6572, 231.36853;
 234.36308, 208.67932;
 223.97272, 185.83453;
 213.58478, 162.78429;
 203.14841, 139.74185;
 192.43852, 116.58232;
 182.04881, 93.009499;
 314.6358, 331.47757;
 304.98822, 309.71494;
 295.46698, 288.09692;
 285.45871, 266.26331;
 275.51129, 244.40599;
 265.547, 222.31189;
 255.5775, 200.19765;
 245.49536, 177.84454;
 235.43037, 155.39085;
 225.32016, 132.68808;
 215.01459, 110.07236;
 204.64554, 87.279938]
[351.92633, 411.12457;
 325.34839, 398.52652;
 298.75916, 385.84225;
 271.75012, 373.25919;
 244.68222, 360.58789;
 217.26262, 347.81152;
 189.79399, 335.04562;
 161.95506, 322.02051;
 134.10992, 309.03381;
 106.03269, 295.87518;
 77.796638, 282.27667;
 49.546219, 268.62195;
 361.327, 383.21307;
 335.58252, 370.9707;
 309.64764, 358.55402;
 283.64691, 346.14877;
 257.20523, 333.7514;
 230.69951, 321.36301;
 203.87115, 308.7178;
 176.98828, 295.94107;
 149.66167, 283.30347;
 122.39019, 270.40372;
 94.78257, 257.14478;
 67.271584, 243.55019;
 370.3313, 357.00217;
 345.27921, 344.7905;
 320.13486, 332.78564;
 294.70038, 320.51443;
 269.21326, 308.42749;
 243.25893, 296.26175;
 217.31488, 283.79251;
 190.97874, 271.3927;
 164.58543, 258.82391;
 137.83182, 246.24985;
 111.12974, 233.24286;
 84.254501, 220.03548;
 378.82108, 331.91165;
 354.52008, 320.29367;
 329.85208, 308.3494;
 305.24713, 296.3287;
 280.34018, 284.4444;
 255.19675, 272.41937;
 229.82225, 260.34671;
 204.42737, 247.95448;
 178.62961, 235.73633;
 152.69621, 223.35748;
 126.6155, 210.79149;
 100.53642, 197.69919;
 387.00522, 308.29895;
 363.28, 296.59158;
 339.13837, 285.16302;
 315.08499, 273.47955;
 290.87112, 261.57568;
 266.48499, 249.82574;
 241.78046, 237.9077;
 216.99828, 226.01767;
 192.06708, 213.75148;
 166.80431, 201.83774;
 141.47491, 189.66814;
 116.00983, 176.83171;
 394.65347, 285.61234;
 371.47403, 274.34952;
 348.05515, 262.90875;
 324.53296, 251.53606;
 300.86646, 240.06238;
 277.11115, 228.45378;
 253.16061, 216.79245;
 229.04797, 205.12254;
 204.67274, 193.20123;
 180.29077, 181.25031;
 155.52736, 169.54803;
 130.77359, 157.14474;
 401.67734, 264.42624;
 379.09119, 253.16789;
 356.55746, 241.70825;
 333.48087, 230.66669;
 310.44238, 219.47084;
 287.24374, 208.22806;
 263.96609, 196.75157;
 240.4579, 185.30348;
 216.81982, 173.66333;
 192.86908, 161.90688;
 168.93233, 150.24677;
 144.70621, 138.49318]
[564.3446, 227.27953;
 532.815, 237.59166;
 501.85901, 247.58379;
 471.40781, 257.62299;
 441.7048, 267.4176;
 412.59247, 276.95654;
 384.38449, 286.28967;
 356.45895, 295.28458;
 329.38882, 304.35309;
 302.74066, 313.14496;
 276.47928, 321.59183;
 250.64528, 330.04996;
 551.5578, 199.67731;
 520.93164, 210.19182;
 490.63162, 220.29027;
 461.04083, 230.20259;
 432.02554, 240.18616;
 403.66898, 249.74355;
 376.01508, 259.1478;
 348.83728, 268.32404;
 322.41745, 277.41727;
 296.47687, 286.366;
 270.75003, 294.94821;
 245.41855, 303.33273;
 539.40668, 173.38637;
 509.41537, 183.80789;
 480.03278, 194.08064;
 450.99063, 204.0813;
 422.82425, 214.01588;
 395.1727, 223.77168;
 368.1651, 233.21991;
 341.6651, 242.58606;
 315.76498, 251.6584;
 290.42654, 260.72;
 265.37729, 269.33923;
 240.59149, 277.68454;
 527.56372, 148.1154;
 498.48083, 158.66058;
 469.65842, 168.86555;
 441.48822, 179.06409;
 413.99881, 189.05086;
 387.03296, 198.92949;
 360.66351, 208.55612;
 334.77496, 217.79449;
 309.52133, 227.03212;
 284.69189, 236.12946;
 260.27051, 244.86708;
 235.87529, 253.22916;
 516.46997, 123.81139;
 487.88339, 134.44296;
 459.90067, 145.03644;
 432.46506, 155.26088;
 405.48083, 165.21507;
 379.27866, 175.08179;
 353.46103, 184.72115;
 328.26529, 194.23395;
 303.43124, 203.28432;
 279.25281, 212.48936;
 255.41183, 221.40231;
 231.49179, 229.77814;
 505.54132, 100.65371;
 477.85355, 111.20119;
 450.44156, 121.76161;
 423.66702, 132.33571;
 397.36823, 142.38168;
 371.68088, 152.28444;
 346.56662, 161.93938;
 321.87234, 171.39029;
 297.60629, 180.58315;
 273.82611, 189.63817;
 250.67975, 198.77431;
 227.44695, 207.35268;
 495.32388, 78.848175;
 468.11145, 89.355156;
 441.44827, 99.475655;
 415.20346, 110.11701;
 389.62054, 120.38813;
 364.53387, 130.29939;
 339.86511, 140.0089;
 315.75723, 149.49799;
 292.07205, 158.76897;
 268.65909, 167.8343;
 245.97791, 176.89352;
 223.53999, 185.79677]
[407.25467, 261.88699;
 378.86273, 263.20023;
 350.29169, 264.17474;
 321.57947, 265.55707;
 292.2655, 266.9361;
 262.79678, 268.12344;
 233.31808, 269.54651;
 203.13666, 270.81277;
 172.71317, 272.2695;
 142.14459, 273.75821;
 111.21159, 274.95865;
 80.044693, 276.16968;
 403.92618, 234.83366;
 376.10568, 236.0195;
 347.98929, 236.93456;
 319.76315, 237.93323;
 290.95013, 239.39523;
 262.11252, 240.37967;
 232.85188, 241.65898;
 203.52684, 242.6488;
 173.66368, 244.07356;
 143.67195, 245.37898;
 113.24507, 246.40903;
 82.42485, 247.41737;
 400.77719, 208.87924;
 373.46194, 209.75722;
 345.82465, 210.54521;
 317.87958, 211.52187;
 289.85062, 212.49942;
 261.55331, 213.71288;
 232.59987, 214.69215;
 203.74019, 215.80461;
 174.40575, 216.9437;
 144.98683, 218.00618;
 115.21961, 219.00223;
 85.044792, 219.73169;
 397.80435, 183.60068;
 370.78143, 184.45949;
 343.7767, 185.36473;
 316.18341, 186.09541;
 288.50375, 187.10744;
 260.61694, 187.98039;
 232.45528, 188.94783;
 204.01582, 189.66287;
 175.43793, 190.72708;
 146.3197, 191.61594;
 117.15916, 192.47171;
 87.639801, 193.15628;
 394.97345, 159.3586;
 368.31198, 159.95232;
 341.69498, 160.99356;
 314.56171, 161.5874;
 287.57468, 162.25749;
 260.02359, 163.27235;
 232.31813, 163.84785;
 204.31625, 164.66388;
 176.10805, 165.36473;
 147.76373, 166.28224;
 119.22594, 167.30612;
 90.128021, 167.61203;
 392.09781, 135.60753;
 366.03827, 136.22459;
 339.74582, 137.11356;
 313.21762, 137.75693;
 286.34787, 138.41399;
 259.51196, 139.27727;
 232.16264, 139.75938;
 204.62755, 140.39101;
 176.85762, 141.08586;
 149.01486, 141.63405;
 121.16592, 142.62331;
 92.68602, 143.30321;
 389.33435, 113.28698;
 363.66925, 113.57505;
 337.81818, 113.79916;
 311.70361, 114.67607;
 285.42514, 115.45947;
 258.65091, 115.87798;
 231.9771, 116.45192;
 204.95605, 117.12765;
 177.78065, 117.53519;
 150.19655, 118.09734;
 122.80494, 118.92005;
 95.40641, 119.77333]
[482.41364, 142.46794;
 466.72665, 168.79312;
 451.18176, 194.74834;
 435.7905, 220.7775;
 420.66586, 246.44446;
 405.64606, 271.92456;
 390.81512, 297.15067;
 376.04935, 322.2952;
 361.56436, 347.05756;
 347.17203, 371.79288;
 332.50656, 396.37631;
 318.11288, 420.8345;
 455.92148, 130.70499;
 440.83133, 156.53226;
 425.69418, 182.06123;
 410.755, 207.2998;
 396.17078, 232.56906;
 381.61539, 257.41599;
 367.28229, 282.23434;
 352.90536, 306.5882;
 338.92706, 331.0936;
 324.88, 355.2438;
 310.71457, 379.32574;
 296.48605, 403.27634;
 430.81848, 119.57964;
 416.17462, 144.84471;
 401.53152, 169.78392;
 387.04547, 194.59689;
 372.78275, 219.1763;
 358.73819, 243.66003;
 344.73563, 267.77753;
 330.94174, 291.79791;
 317.20499, 315.6911;
 303.64145, 339.47513;
 289.8898, 363.02142;
 276.02249, 386.5228;
 406.81931, 108.80975;
 392.65836, 133.6696;
 378.46011, 158.14362;
 364.42749, 182.41397;
 350.60034, 206.51654;
 336.96683, 230.48016;
 323.43054, 254.26785;
 309.8465, 277.68698;
 296.63693, 301.10931;
 283.41522, 324.37494;
 270.16049, 347.47171;
 256.53503, 370.41718;
 383.86261, 98.571007;
 370.0784, 122.85624;
 356.53201, 147.04814;
 342.97336, 170.83163;
 329.38593, 194.48154;
 316.21552, 217.90462;
 302.92545, 241.18504;
 289.84534, 264.30075;
 276.73697, 287.1232;
 264.11728, 309.90491;
 251.34995, 332.55145;
 238.00075, 355.07281;
 361.91422, 88.761375;
 348.51694, 112.54297;
 335.26987, 136.31883;
 322.3176, 159.74332;
 309.23126, 182.95467;
 296.29764, 205.86578;
 283.43713, 228.69331;
 270.67731, 251.36787;
 257.95822, 273.76987;
 245.38361, 296.11511;
 233.1949, 318.366;
 220.46301, 340.36523;
 341.22165, 79.632797;
 328.06677, 102.91376;
 314.96307, 125.87647;
 302.4119, 149.06505;
 289.80832, 171.85146;
 277.26215, 194.44672;
 264.72702, 216.74831;
 252.38391, 239.00317;
 240.01707, 261.04395;
 227.63432, 282.94449;
 215.63486, 304.69156;
 203.67874, 326.41013]
[503.85672, 326.9274;
 474.89993, 313.40176;
 446.5282, 299.83063;
 418.17291, 286.71021;
 390.37329, 273.6449;
 362.79352, 260.78571;
 335.76065, 248.24245;
 308.98123, 235.62137;
 282.66992, 223.37337;
 256.56345, 211.27136;
 230.69189, 198.84703;
 205.00906, 186.76187;
 514.33673, 299.36035;
 485.707, 286.25513;
 457.59943, 273.05301;
 429.79956, 260.23053;
 402.25748, 247.58755;
 375.20242, 235.28351;
 348.36636, 222.94824;
 322.05368, 210.6935;
 295.92609, 198.79793;
 270.21948, 186.98247;
 244.59229, 175.05891;
 219.31464, 163.08232;
 524.39294, 272.72974;
 496.25244, 259.84641;
 468.50754, 247.21277;
 441.06033, 234.56999;
 413.87155, 222.46004;
 387.04688, 210.39046;
 360.66803, 198.37506;
 334.56622, 186.63161;
 308.79788, 174.9917;
 283.29758, 163.56627;
 258.21893, 151.88504;
 233.12814, 140.16502;
 534.13428, 246.80196;
 506.37576, 234.49614;
 478.97501, 222.08116;
 451.84976, 209.94011;
 425.10757, 198.08264;
 398.61124, 186.37068;
 372.52292, 174.78238;
 346.73956, 163.26143;
 321.29623, 152.00529;
 296.20789, 140.76697;
 271.23737, 129.55493;
 246.60304, 117.93889;
 543.63464, 221.74924;
 516.31439, 209.68555;
 489.12936, 197.97672;
 462.33859, 186.16336;
 435.94479, 174.47971;
 409.7641, 163.16794;
 384.06906, 151.83542;
 358.61111, 140.67474;
 333.46924, 129.4727;
 308.62775, 118.68813;
 284.05298, 107.93343;
 259.62854, 96.620071;
 552.70068, 197.52252;
 525.93188, 185.73654;
 499.08102, 174.22374;
 472.54181, 162.88304;
 446.46301, 151.68808;
 420.65625, 140.53258;
 395.17737, 129.64558;
 370.12851, 118.68615;
 345.24417, 107.81322;
 320.70987, 97.095253;
 296.44229, 86.821823;
 272.43216, 76.040535;
 561.27307, 174.38593;
 534.80988, 162.71222;
 508.70825, 151.25026;
 482.49478, 140.35632;
 456.66284, 129.50914;
 431.21063, 118.64533;
 406.142, 107.96238;
 381.2142, 97.44236;
 356.69574, 86.805145;
 332.42657, 76.364273;
 308.47052, 66.285774;
 284.6976, 56.240067]
[410.93674, 377.24771;
 381.93323, 377.69016;
 352.67328, 378.21683;
 322.80945, 378.81473;
 292.67401, 379.64319;
 262.1499, 380.31372;
 231.30464, 381.11038;
 199.7296, 381.70355;
 167.98372, 382.40063;
 135.74188, 383.20422;
 103.31067, 383.35767;
 70.522964, 383.63995;
 406.81641, 348.73575;
 378.78119, 349.3385;
 350.25748, 349.49173;
 321.63196, 349.80048;
 292.21542, 350.35291;
 262.49875, 350.90057;
 232.37529, 351.50208;
 201.93733, 351.84827;
 171.13446, 352.46243;
 139.90488, 353.14914;
 108.36205, 353.31339;
 76.476967, 353.25903;
 403.13773, 322.24149;
 375.78912, 322.28156;
 348.12027, 322.42535;
 320.07535, 322.47211;
 291.74445, 322.88992;
 262.82886, 323.4194;
 233.7706, 323.59625;
 204.16214, 324.02301;
 174.21034, 324.34351;
 143.7708, 324.68231;
 113.10131, 324.64746;
 82.229637, 324.47626;
 399.62964, 297.00348;
 373.01773, 297.23151;
 346.05862, 296.97354;
 318.74841, 297.00229;
 291.37714, 297.29697;
 263.379, 297.46136;
 234.91432, 297.58783;
 206.16841, 297.61008;
 177.14336, 297.89243;
 147.61882, 298.09167;
 117.7646, 298.11359;
 87.637924, 297.61761;
 396.35623, 273.26083;
 370.2941, 273.1716;
 344.08698, 273.23404;
 317.74112, 273.13156;
 290.65335, 272.91782;
 263.72409, 273.05371;
 235.99826, 272.98892;
 208.14786, 272.99298;
 179.92235, 272.79443;
 151.31543, 273.03491;
 122.36647, 273.07535;
 93.041405, 272.34698;
 393.08661, 250.48958;
 367.85883, 250.31496;
 342.22141, 250.27785;
 316.37784, 250.25844;
 290.34442, 250.09161;
 263.85797, 249.86028;
 237.18793, 249.76749;
 210.002, 249.54189;
 182.50352, 249.37708;
 154.62143, 249.19646;
 126.64122, 249.28877;
 98.239441, 248.6908;
 390.07535, 229.48802;
 365.51602, 229.23872;
 340.51462, 228.43573;
 315.5466, 228.42166;
 289.89874, 228.34029;
 264.16199, 228.11613;
 238.11174, 227.70848;
 211.74995, 227.53107;
 185.01181, 227.27234;
 157.87518, 226.68977;
 130.65273, 226.52682;
 103.13049, 226.37764]
[337.79886, 261.81644;
 314.00165, 259.93127;
 289.85446, 257.86539;
 265.19769, 256.026;
 240.07664, 253.99733;
 214.41536, 252.01918;
 188.36508, 249.86273;
 161.74779, 247.87759;
 134.81436, 245.73106;
 107.45011, 243.64578;
 79.67038, 241.38252;
 51.514427, 239.07486;
 339.2345, 237.99786;
 315.68582, 235.87445;
 291.59274, 233.78252;
 267.19962, 231.66391;
 242.12303, 229.48778;
 216.74223, 227.35283;
 190.95377, 224.98619;
 164.59172, 222.57742;
 137.85435, 220.31165;
 110.72966, 217.8468;
 83.21817, 215.55481;
 55.363224, 212.84764;
 340.43091, 214.64594;
 317.13864, 212.31453;
 293.42661, 209.93361;
 269.10223, 207.61008;
 244.26884, 205.31454;
 219.20477, 202.85872;
 193.6496, 200.34238;
 167.42841, 197.7715;
 140.89632, 195.32576;
 114.08096, 192.68745;
 86.756668, 189.93623;
 59.083118, 187.29483;
 341.8949, 191.51347;
 318.47598, 189.18834;
 294.9682, 186.51357;
 270.91806, 183.90691;
 246.298, 181.41127;
 221.59642, 178.75665;
 196.00737, 176.147;
 170.21251, 173.32037;
 143.84863, 170.63046;
 117.38699, 167.84889;
 90.384918, 165.13881;
 62.918613, 161.93939;
 343.40146, 168.66095;
 320.10074, 165.94945;
 296.49652, 163.51273;
 272.66586, 160.68839;
 248.37672, 157.88956;
 223.71388, 155.20044;
 198.44579, 152.26581;
 172.87819, 149.41649;
 146.8309, 146.26962;
 120.56873, 143.537;
 93.931, 140.59438;
 66.820488, 137.43015;
 344.40628, 146.12823;
 321.73862, 143.36949;
 298.20309, 140.50533;
 274.44846, 137.75386;
 250.39433, 134.75574;
 225.89264, 131.75842;
 200.95544, 128.77742;
 175.62416, 125.68665;
 149.72134, 122.5178;
 123.75278, 119.4069;
 97.399315, 116.48838;
 70.692276, 113.24607;
 345.75494, 124.19492;
 323.01086, 121.20161;
 299.89124, 118.01981;
 276.28467, 115.10368;
 252.34227, 112.08034;
 228.09766, 108.859;
 203.45705, 105.66071;
 178.28882, 102.41849;
 152.73413, 99.117668;
 126.93946, 95.847343;
 100.97089, 92.733368;
 74.651932, 89.658997]
[427.91873, 343.36139;
 400.61496, 342.19199;
 373.65454, 341.1264;
 345.94174, 340.09991;
 318.38052, 339.25085;
 290.453, 338.19675;
 262.54654, 337.28476;
 234.43036, 336.19479;
 206.21558, 335.34076;
 177.62227, 334.33624;
 148.7868, 333.06436;
 119.97338, 331.78656;
 425.46048, 317.76578;
 399.07339, 316.7316;
 372.48294, 315.48395;
 345.77649, 314.27057;
 318.74765, 313.49356;
 291.83859, 312.3717;
 264.62259, 311.52914;
 237.44394, 310.23624;
 209.81488, 309.53723;
 182.21854, 308.48529;
 154.19229, 307.35019;
 125.98043, 305.78561;
 423.01663, 293.84738;
 397.4267, 292.4902;
 371.61307, 291.49265;
 345.63144, 290.13101;
 319.4946, 289.24091;
 293.23346, 288.25684;
 266.54971, 287.25732;
 240.14456, 286.20056;
 213.40973, 285.23749;
 186.49959, 284.2034;
 159.2588, 282.85498;
 131.77354, 281.45108;
 420.62955, 271.10541;
 395.74265, 269.92593;
 370.48691, 268.50851;
 345.43652, 267.48615;
 319.80798, 266.35275;
 294.25873, 265.45801;
 268.52585, 264.31412;
 242.62595, 263.30167;
 216.76265, 262.22336;
 190.5024, 261.21057;
 164.12283, 259.90448;
 137.4265, 258.21893;
 418.69601, 249.39046;
 394.21906, 248.17813;
 369.76511, 247.32451;
 345.12299, 246.05737;
 320.30051, 244.74071;
 295.53989, 243.73563;
 270.29855, 242.62515;
 245.26112, 241.5705;
 219.8423, 240.24435;
 194.43736, 239.42159;
 168.71173, 238.20567;
 142.69255, 236.49457;
 416.54745, 228.63824;
 392.96561, 227.62198;
 368.79016, 226.3662;
 344.75519, 225.57877;
 320.61066, 224.30656;
 296.38708, 223.36168;
 272.04718, 222.19664;
 247.61488, 221.05299;
 222.8501, 219.66869;
 197.99605, 218.4962;
 173.02701, 217.57834;
 147.81267, 216.02551;
 414.7511, 209.54236;
 391.58328, 208.22345;
 368.21829, 206.82474;
 344.54321, 205.91711;
 321.17798, 204.97147;
 297.52411, 203.73322;
 273.75513, 202.60832;
 249.70406, 201.50647;
 225.66104, 200.21021;
 201.30241, 199.07098;
 177.11444, 197.84953;
 152.61357, 196.73816];*/

	return 0;
}